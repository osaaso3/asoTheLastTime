@page "/"
@inject NavigationManager navigationManager
@inject State state
@inject DataService dataService

@layout AsoLayout1
<h3>Welcome!</h3>

<div class="top-row navbar navbar-dark bg-primary">
    @if (dataService.Settings.ShowCategoriesInHeader)
    {
        <Pagination Class="m-0">

            @*<PaginationItem Disabled="@(State.SelectedCategoryId == DataService.CategoryList.First().Id)">*@
            <PaginationItem>
                <PaginationLink Clicked="(Page) => { state.PreviousCategory(); }">
                    <span aria-hidden="true">«</span>
                </PaginationLink>
            </PaginationItem>

            <PaginationItem>
                <PaginationLink Page="0" Clicked="(Page) => { state.SelectedCategoryId = int.Parse(Page); }">
                    All
                </PaginationLink>
            </PaginationItem>

            @for (int i = 0; i < dataService.CategoryList.Count; ++i)
            {
                 int idx = i;
                 string index = i == 0 ? "No" : i.ToString();
                string css = string.Empty;

                if (state.SelectedCategoryIdx != -1)
                {
                    if ((idx > 6 || idx < dataService.CategoryList.Count - 1 - 6) && (idx > state.SelectedCategoryIdx + 3 || idx < state.SelectedCategoryIdx - 3))
                    {
                        css = "hide-pagination";
                    }

                    if ((idx > 10 || idx < dataService.CategoryList.Count - 1 - 10) && (idx > state.SelectedCategoryIdx + 5 || idx < state.SelectedCategoryIdx - 5))
                    {
                        css += " hide-pagination-lg";
                    }
                }

                <PaginationItem Class="@css" Active="@(state.SelectedCategoryId == dataService.CategoryList[idx].Id)">
                    <PaginationLink Page="@(dataService.CategoryList[idx].Id.ToString())" Clicked="(Page) => { asoPage(Page); }">
                        @index
                    </PaginationLink>
                </PaginationItem>
            }

            @*<PaginationItem Disabled="@(State.SelectedCategoryId == DataService.CategoryList.Last().Id)">*@
            <PaginationItem>
                <PaginationLink Clicked="(Page) => { state.NextCategory(); }">
                    <span aria-hidden="true">»</span>
                </PaginationLink>
            </PaginationItem>

        </Pagination>
    }
    @* 
    
     <button class="btn-blue"
            @onclick="@MyMethodAsync">
        Home
                </button>
                *@
                                <RadzenButton Click=@(args => OnClick("Home")) Text="Home" Icon="home" Style="margin-bottom: 20px; width: 140px" />
                                <RadzenButton Click=@(args => OnClick("Model")) Text="Model" Icon="account_balance" Style="margin-bottom: 20px; width: 160px" />

    <span  class="col-lg-12 col-xl-6 px-1 px-sm-3">         CogSci 2020</span>
</div>

@code
{
    [Parameter]
    public int idx1 {get; set;}=1;

    void  MyMethodAsync()
    {
        navigationManager.NavigateTo("/");
    }
    
    void asoPage(string page)
    {
        state.SelectedCategoryId = int.Parse(page);
        idx1=int.Parse(page);
        //StateHasChanged();
        
    }
    
                protected override void OnParametersSet()
    {
       // State.SelectedCategoryId = int.Parse(page);
       // idx1=int.Parse(page);                  
       // StateHasChanged();
  }

      void OnClick(string buttonName)
    {
        if (buttonName=="Home")
       {
                           navigationManager.NavigateTo("/");

        }
        else
        {
                           navigationManager.NavigateTo("/cm");

        }
       // console.Log($"{buttonName} clicked");

    }
}